LISTENERS
=========

dialogChannel
-------------

Many channels are based off of the setting of the dialogChannel; is this good?
All of the channels are set to the same dialogChannel system-wide. Note that this
is only the channel number, not the actual opening of the listener.

Aux.lsl:              textboxChannel = dialogChannel - 1111;
Avatar.lsl:              poseChannel = dialogChannel - POSE_CHANNEL_OFFSET;
Dress.lsl:            rlvBaseChannel = dialogChannel ^ 0x80000000; // Xor with the sign bit forcing the positive channel needed by RLV spec.
Dress.lsl:            outfitsChannel = dialogChannel + 15; // arbitrary offset
MenuHandler.lsl:         poseChannel = dialogChannel - POSE_CHANNEL_OFFSET;
MenuHandler.lsl:         typeChannel = dialogChannel - TYPE_CHANNEL_OFFSET;
MenuHandler.lsl:    blacklistChannel = dialogChannel - BLACKLIST_CHANNEL_OFFSET;
MenuHandler.lsl:      controlChannel = dialogChannel - CONTROL_CHANNEL_OFFSET;
Transform.lsl:           typeChannel = dialogChannel - TYPE_CHANNEL_OFFSET;

Channels and the scripts that use them:

     textboxChannel: Aux.lsl
        poseChannel: Avatar.lsl MenuHandler.lsl
     rlvBaseChannel: Dress.lsl
     outfitsChannel: Dress.lsl
        typeChannel: MenuHandler.lsl Transform.lsl
   blacklistChannel: MenuHandler.lsl
     controlChannel: MenuHandler.lsl

Only two channels are multi-script: poseChannel and typeChannel. Perhaps this
could be reduced?

dialogChannel drives the setting of the following channels

    * blacklistChannel
    * controlChannel
    * outfitsChannel
    * outfitSearchChannel
    * poseChannel (2x)
    * rlvBaseChannel
    * textboxChannel
    * typeChannel (2x)
    * typeSearchChannel

rlvChannel - based on dialogChannel - is also used as an offset:

   Transform.lsl:      typeSearchChannel = rlvChannel + 1;
   Transform.lsl:    outfitSearchChannel = rlvChannel + 2;

rlvBaseChannel - also based on dialogChannel - is used here:

   Dress.lsl:       rlvBaseChannel = dialogChannel ^ 0x80000000; // Xor with the sign bit forcing the positive channel needed by RLV spec.

   Dress.lsl:     menuDressChannel = rlvBaseChannel + 2666;
   Dress.lsl:   confirmWearChannel = rlvBaseChannel + 2668;
   Dress.lsl: confirmUnwearChannel = rlvBaseChannel + 2669;

dialogChannel is read by:

    * Aux.lsl
    * Avatar.lsl
    * CheckRLV.lsl
    * Dress.lsl
    * Main.lsl
    * Transform.lsl

dialogChannel is set in MenuHandler:

MenuHandler.lsl:    dialogChannel = 0x80000000 | (integer)("0x" + llGetSubString((string)llGenerateKey(), -7, -1));
MenuHandler.lsl:                     if (name == "dialogChannel") {         dialogChannel = (integer)value;

rlvChannel
----------
rlvChannel is based on dialogChannel, and is used (separately) in two different
places, and with different meanings and settings:

CheckRLV.lsl:   rlvChannel = MAX_INT - (integer)llFrand(5000);
CheckRLV.lsl:   rlvChannel = ~dialogChannel + 1;
Transform.lsl:  rlvChannel = ~dialogChannel + 1;

The setting of rlvChannel in CheckRLV needs to be unraveled, and used consistently.

The channel rlvBaseChannel in Dress.lsl seems to be of a similar purpose;
this should be examined and fixed if necessary.

Other Channels
--------------
StatusRLV: statusChannel

Channels and Listeners
----------------------
Channels are just numbers, and don't mean a listener is open. Listeners should
be opened when needed and closed as soon as possible.

Listeners are opened in the following:

          Aux.lsl: listen(integer channel, string name, key id, string choice) {
  ChatHandler.lsl: listen(integer channel, string name, key id, string msg) {
     CheckRLV.lsl: listen(integer chan, string name, key id, string msg) {
        Dress.lsl: listen(integer channel, string name, key id, string choice) {
  MenuHandler.lsl: listen(integer channel, string name, key id, string choice) {
    StatusRLV.lsl: listen(integer channel, string name, key id, string data) {
    Transform.lsl: listen(integer channel, string name, key id, string choice) {
UpdaterServer.lsl: listen(integer channel, string name, key id, string msg) {

Aux: textboxChannel
ChatHandler: chatChannel
CheckRLV: rlvChannel
Dress: outfitsChannel
     menuDressChannel
    confirmWearChannel
   confirmUnwearChannel
MenuHandler:
    dialogChannel
    blacklistChannel
    controlChannel
    poseChannel
    typeChannel
StatusRLV:
    statusChannel
Transform:
    outfitSearchChannel
    typeSearchChannel

Dress.lsl:integer rlvBaseChannel;
Dress.lsl:        lmRunRLV(rlv + (string)(rlvBaseChannel + channel));
Dress.lsl:                rlvBaseChannel = dialogChannel ^ 0x80000000; // Xor with the sign bit forcing the positive channel needed by RLV spec.
Dress.lsl:                  menuDressChannel = rlvBaseChannel + 2666;
Dress.lsl:                confirmWearChannel = rlvBaseChannel + 2668;
Dress.lsl:              confirmUnwearChannel = rlvBaseChannel + 2669;
